apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  interval: 1m
  releaseName: supplychain-orderer1
  chart:
    spec:
      interval: 1m
      sourceRef:
        kind: GitRepository
        name: flux-local
        namespace: flux-local
      chart: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://52.229.229.54:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: upgrade.upgrade.com

    genesis: |-
      CiIaIMtSeuIVf7uIkdkQNI6UaFaA9gR1JXVmuWXAR/vpwSx8EqpeCqdeCqReCngKWggBEAEaBgiX
      ztmdBiIKc3lzY2hhbm5lbCpAZDQ4NDM0MTM4ZDFmMzJkODRlOWU3YTIwMjE5ZjRhZWRiYWQ4NTZm
      Nzc5NDhmOThjZDVmMzNlNTQ0ZjBhZmI4ZhIaEhi0Ekd9ouQh0nSK8Y/30UChUFtMF7lFowsSp10K
      pF0SoV0SnysKB09yZGVyZXISkysS1hYKDnN1cHBseWNoYWluTVNQEsMWGs8UCgNNU1ASxxQSvBQS
      uRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND
      QWFhZ0F3SUJBZ0lVSi90dTNJUE9ENFFEQkRTN1JsaFUzQTI4MSs0d0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nak13TVRBMU1EVTBNak16V2hjTk1qVXhNREkxTURVME1qTXpX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJCWFdr
      enpoRDV4d2lkYVpaa013azdFcDg5NXd5MklaNk1iSzc3YTZ5VWhnS01RRXpNR2UKeXcwV2cwZGFV
      TUxhNk01eHlROWtvNnp6MzkwUXpjNXd4VzZqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCVFZFdFJXbGZUUVZjWW01TURUUWhNdlBy
      anhKekFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWw4M05GU3k3SjdDV1lsYUxXWU9XZVM4Z05R
      L2QvMzVVZTljTENkVXYKU1BRQ0lRRGluT1phRTNFZ3FXcWQ4MFFUcEcxS1VpQnEvaFJteWtTbmk3
      bVFKN2pHSlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKmCC0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlDNGpDQ0FvaWdBd0lCQWdJVUpPUFQ3Q0hnZ1BVaVkzcWlXRUhLdjBHR0Qw
      RXdDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR
      WURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpNd01UQTFNRFUwT1RBd1do
      Y05NalF3TVRBMU1EVTFOREF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U
      RXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR
      UUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      dwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRTNOem5lVkVZT3BhNUlZVkZhRzlsN3dG
      UW5QeW9QWENJCjkzZHkrK3ZDYmVpTDJZQ0NnY25Tdm1qNGpaTW52Vko0c01XdXArSEh0eFQ5WEN0
      YnZwQ3NNS09DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCUVpPaFFSWWhSeApjSm82bGNKWW1mMGlhdUtzV2pBZkJnTlZIU01FR0RB
      V2dCVFZFdFJXbGZUUVZjWW01TURUUWhNdlByanhKekFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5
      c2N5MDJZbUk0Wmpaa05qUmpMVGx4YkdKdE1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3
      CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFNBQXcKUlFJaEFPb3FRRFpzV05ERXB0blh6cnZvL28zaFhSSFBESHpNcTg3TzBDQkljWTJy
      QWlCZmJKTnJlUFdQaTV2bwpvVkhUaDlrUGRWZCsyWVI3MnN5ZktLWWE4czBNb2c9PQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK9QUtLS0tLUJFR0lOIENFUlRJRklD
      QVRFLS0tLS0KTUlJQ0FUQ0NBYWFnQXdJQkFnSVVKL3R1M0lQT0Q0UURCRFM3UmxoVTNBMjgxKzR3
      Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2
      YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlE
      VlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qTXdNVEExTURVME1qTXpXaGNO
      TWpVeE1ESTFNRFUwTWpNeldqQmVNUXN3Q1FZRFZRUUdFd0pIUWpFUApNQTBHQTFVRUNBd0dURzl1
      Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5ClpYSXhHekFa
      QmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUcK
      U000OUF3RUhBMElBQkJYV2t6emhENXh3aWRhWlprTXdrN0VwODk1d3kySVo2TWJLNzdhNnlVaGdL
      TVFFek1HZQp5dzBXZzBkYVVNTGE2TTV4eVE5a282enozOTBRemM1d3hXNmpRakJBTUE4R0ExVWRF
      d0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJUVkV0Ulds
      ZlRRVmNZbTVNRFRRaE12UHJqeEp6QUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBbDgzTkZTeTdK
      N0NXWWxhTFdZT1dlUzhnTlEvZC8zNVVlOWNMQ2RVdgpTUFFDSVFEaW5PWmFFM0VncVdxZDgwUVRw
      RzFLVWlCcS9oUm15a1NuaTdtUUo3akdKUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZB
      ZG1pbnMiNwoHUmVhZGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZB
      ZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZB
      ZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIGCAESAggAGhQSEgoOc3VwcGx5Y2hhaW5NU1AQARoG
      QWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5N
      U1AaBkFkbWlucyoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4K
      DEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZB
      ZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGooSCg1Db25zZW5z
      dXNUeXBlEvgREu0RCghldGNkcmFmdBLgEQrJEQoYb3JkZXJlcjEuc3VwcGx5Y2hhaW4tbmV0EIo3
      GtMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQXF1Z0F3SUJBZ0lVVWI4SmNv
      Q0sweVpHYmRoZGJ0OXQvZjUzTVgwd0NnWUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1Iw
      SXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR
      UUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3Ckho
      Y05Nak13TVRBMU1EVTBPVEF3V2hjTk1qUXdNVEExTURVMU5EQXdXakJ4TVFzd0NRWURWUVFHRXdK
      SFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdk
      UGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJsY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21W
      eU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndO
      Q0FBUXUrdFFhTkxCeEdWd2lsSnNDcUFVaTZRVVcKdCtVZ1duZjgrczRud0hyZDMwMHhqTDIyeE5w
      NzJWbmc3bzVnSlZVM3dKaUg4blh4VjdwL3ZhdmIyWllBbzRJQgpNakNDQVM0d0RnWURWUjBQQVFI
      L0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGCkJRY0RBakFNQmdO
      VkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVG01d0VYUllZRG5pa2xtOXgxOWNWVk5QSk4KeWpB
      ZkJnTlZIU01FR0RBV2dCVFZFdFJXbGZUUVZjWW01TURUUWhNdlByanhKekJCQmdOVkhSRUVPakE0
      Z2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhTQ0hHOXlaR1Z5WlhJeExuVndaM0po
      WkdVdWRYQm5jbUZrClpTNWpiMjB3YkFZSUtnTUVCUVlIQ0FFRVlIc2lZWFIwY25NaU9uc2lhR1l1
      UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5
      TVM1emRYQndiSGxqYUdGcGJpMXVaWFFpTENKbwpaaTVVZVhCbElqb2liM0prWlhKbGNpSjlmVEFL
      QmdncWhrak9QUVFEQWdOSUFEQkZBaUVBbmsyclJOb25UK3ZNClIycTNqSVhRWmJDc2ovYjBMaWE1
      T0tVYm1DQlpCOWNDSUhCT2J1NTNJc0xFY2F5MWdtOGJmbTFhTmQzd2hOdisKNUFhQ0NuOFFuZVZH
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KItMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURCVENDQXF1Z0F3SUJBZ0lVVWI4SmNvQ0sweVpHYmRoZGJ0OXQvZjUzTVgwd0NnWUlLb1pJ
      emowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpq
      WVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05Nak13TVRBMU1EVTBPVEF3V2hjTk1qUXdNVEEx
      TURVMU5EQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1
      TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJs
      Y21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFU
      QmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUXUrdFFhTkxCeEdWd2lsSnNDcUFVaTZRVVcK
      dCtVZ1duZjgrczRud0hyZDMwMHhqTDIyeE5wNzJWbmc3bzVnSlZVM3dKaUg4blh4VjdwL3ZhdmIy
      WllBbzRJQgpNakNDQVM0d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dB
      UVVGQndNQkJnZ3JCZ0VGCkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVG01
      d0VYUllZRG5pa2xtOXgxOWNWVk5QSk4KeWpBZkJnTlZIU01FR0RBV2dCVFZFdFJXbGZUUVZjWW01
      TURUUWhNdlByanhKekJCQmdOVkhSRUVPakE0Z2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBi
      aTF1WlhTQ0hHOXlaR1Z5WlhJeExuVndaM0poWkdVdWRYQm5jbUZrClpTNWpiMjB3YkFZSUtnTUVC
      UVlIQ0FFRVlIc2lZWFIwY25NaU9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSWkKTENKb1ppNUZi
      bkp2Ykd4dFpXNTBTVVFpT2lKdmNtUmxjbVZ5TVM1emRYQndiSGxqYUdGcGJpMXVaWFFpTENKbwpa
      aTVVZVhCbElqb2liM0prWlhKbGNpSjlmVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBbmsyclJO
      b25UK3ZNClIycTNqSVhRWmJDc2ovYjBMaWE1T0tVYm1DQlpCOWNDSUhCT2J1NTNJc0xFY2F5MWdt
      OGJmbTFhTmQzd2hOdisKNUFhQ0NuOFFuZVZHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIK
      BTUwMG1zEAoYASAFKICAgAoaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFk
      bWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRl
      cnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoG
      QWRtaW5zKgZBZG1pbnMSuS8KC0NvbnNvcnRpdW1zEqkvEt4uChVTdXBwbHlDaGFpbkNvbnNvcnRp
      dW0SxC4SshYKCmNhcnJpZXJNU1ASoxYavxQKA01TUBK3FBKsFBKpFAoKY2Fycmllck1TUBLpBS0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RDQ0FaNmdBd0lCQWdJVWJISE5TQjJSMkxI
      aHdPcnFmd1ZtVXNLdnpUTXdDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpB
      TkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFk
      RFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNekF4TURV
      d05UUTFNVGhhRncweU5URXdNalV3TlRRMU1UaGFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE
      ClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5
      Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQwpBQVFDZG9hdExaMUlxM0hESFBrVTdpTjlldTd1a0s0a0RmQlB5VHor
      R2UxbTIxL3NleDF6b2xuVkQ1ellDbDNyCjMwejcyU1lVMWxuZnBxbStxem5ERDZxUm8wSXdRREFQ
      QmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FV
      MXBNc3I5MWhPbUxIN0ppeWltb2FGKzN5MzVVd0NnWUlLb1pJemowRQpBd0lEU1FBd1JnSWhBT0FY
      disvcEcxUjJJOTQ2VmtqZ2JDRjFmaGNVWmtnL3Rtck16WGc0QTBEV0FpRUF4ditiCjRmZnR3aEtO
      Y3BTZVc5RlhFVWlIU0sxTFVndWFtRFZlK0wvaitjZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoisggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBcFNnQXdJQkFnSVVWcFZG
      djJGWXhzSU5UMENQUVJvOFhoU0RDb3N3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1D
      UjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lE
      VlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkK
      TXpBeE1EVXdOVFV6TURCYUZ3MHlOREF4TURVd05UVTRNREJhTUhneEN6QUpCZ05WQkFZVEFrZENN
      UnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwTmhj
      bkpwWlhJeEhqQU1CZ05WCkJBc1RCV0ZrYldsdU1BNEdBMVVFQ3hNSFkyRnljbWxsY2pFYU1CZ0dB
      MVVFQXd3UlFXUnRhVzVBWTJGeWNtbGwKY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9Q
      UU1CQndOQ0FBVEFOcGFLbnplNWhWODZSVXh6L1R6WQpUVFVzRnFYeStKNnJDdHIya2pRaHZhVys0
      dU01K3ZFRkhZeU1iZlI5Qld2UlJPaWRrMDZ0N0QzZ3h4OW5CNlZYCm80SUJHRENDQVJRd0RnWURW
      UjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUUKRkxVcVlVc2RW
      L1F0b21ybm4ybkExaGtKdGpLL01COEdBMVVkSXdRWU1CYUFGTmFUTEsvZFlUcGl4K3lZc29wcQpH
      aGZ0OHQrVk1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVGRqTkRka09UbGlZMkl0YW1Sb1oz
      b3dnWTBHCkNDb0RCQVVHQndnQkJJR0FleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNu
      VmxJaXdpWVdSdGFXNGkKT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUpqWVhKeWFX
      VnlJaXdpYUdZdVJXNXliMnhzYldWdQpkRWxFSWpvaVFXUnRhVzVBWTJGeWNtbGxjaTF1WlhRaUxD
      Sm9aaTVVZVhCbElqb2lZV1J0YVc0aWZYMHdDZ1lJCktvWkl6ajBFQXdJRFJ3QXdSQUlnU2dOUEZD
      dkJhMUhDYnlOVFB3UU5HRENzcGdjS2JJNEJndnNyMTRyQmxhY0MKSUQ2a2JYUGtPRGVhYkxjSVpo
      RXg2OVRnT3YrRHYyRzlhUFo3VzAwVHpJeDIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoE
      U0hBMhIGU0hBMjU2SukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3
      SUJBZ0lVYkhITlNCMlIyTEhod09ycWZ3Vm1Vc0t2elRNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1B
      a0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5
      dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1
      bGREQWVGdzB5Ck16QXhNRFV3TlRRMU1UaGFGdzB5TlRFd01qVXdOVFExTVRoYU1Gb3hDekFKQmdO
      VkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpF
      UU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhR
      d1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUUNkb2F0TFoxSXEzSERIUGtVN2lO
      OWV1N3VrSzRrRGZCUHlUeitHZTFtMjEvc2V4MXpvbG5WRDV6WUNsM3IKMzB6NzJTWVUxbG5mcHFt
      K3F6bkRENnFSbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJ
      QnBqQWRCZ05WSFE0RUZnUVUxcE1zcjkxaE9tTEg3Sml5aW1vYUYrM3kzNVV3Q2dZSUtvWkl6ajBF
      CkF3SURTUUF3UmdJaEFPQVh2Ky9wRzFSMkk5NDZWa2pnYkNGMWZoY1Vaa2cvdG1yTXpYZzRBMERX
      QWlFQXh2K2IKNGZmdHdoS05jcFNlVzlGWEVVaUhTSzFMVWd1YW1EVmUrTC9qK2NnPQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAES
      AggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAa
      DhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwK
      CmNhcnJpZXJNU1AaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJy
      aWVyTVNQEAEaBkFkbWlucyoGQWRtaW5zErEXCg9tYW51ZmFjdHVyZXJNU1ASnRcapRUKA01TUBKd
      FRKSFRKPFQoPbWFudWZhY3R1cmVyTVNQEoEGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J
      SUNDekNDQWJLZ0F3SUJBZ0lVQ092Z3NwN3ptbHpiSGw2TVBsdHd0NDFjR2U0d0NnWUlLb1pJemow
      RUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFV
      RUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFN
      TUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qTXdNVEExTURVME16VXpXaGNOTWpV
      eE1ESTFNRFUwTXpVeldqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdO
      b01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pF
      Y01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdF
      R0NDcUdTTTQ5QXdFSEEwSUFCSHkxSHRIOGRkVHlhVVAwdUkzL3VTTHBjazRLSlBYY3B3d2EKUU5V
      TW93NE1Fb3hUUVJtc0U0NHVINmM2ZzRtYS9VYWdESTJ5SWhQcjhMeWFISnlEQjdtalFqQkFNQThH
      QTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlJx
      MjhBOWl6SjdacHN3Cnl2UXY3YXRBOUk3RVBEQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmRDU3BY
      M0ZFcmtGMTJ3eFl6YkU4cmxwaUYKRXdQMnRPTzlONGZOVlczT0VnSWdiMEd3SlRvcnM4R1Q0WFpp
      REZWdGVjVUZPT2VIWld0ZlFBclFrVjFyZ3dVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLj
      CC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERURDQ0FyZWdBd0lCQWdJVVU1QnQwTWZt
      L0Y0L1B3aVpVWXNaTGwxZzdoZ3dDZ1lJS29aSXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4
      RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFL
      REF4TllXNTFabUZqZEhWeVpYSXhIREFhQmdOVkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1
      WlhRd0hoY05Nak13TVRBMU1EVTFNREF3V2hjTk1qUXdNVEExTURVMU5UQXdXakNCaGpFTE1Ba0dB
      MVVFCkJoTUNRMGd4R2pBWUJnTlZCQWNURVRRM0xqTTRMemd1TlRRdlduVnlhV05vTVJVd0V3WURW
      UVFLRXd4TllXNTEKWm1GamRIVnlaWEl4SXpBTUJnTlZCQXNUQldGa2JXbHVNQk1HQTFVRUN4TU1i
      V0Z1ZFdaaFkzUjFjbVZ5TVI4dwpIUVlEVlFRRERCWkJaRzFwYmtCdFlXNTFabUZqZEhWeVpYSXRi
      bVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJCnpqMERBUWNEUWdBRWU2d01ITjBYK0ZYM0tlaFVn
      TGRKdFNIaHVvWkhmWDlTSE5RQ1lydWMxREZ2ZmtjSzFQZloKUVNEMzQwTHRtMVRJWExnYVdEdkIw
      YmZvZkM0UzQ5M0JJcU9DQVNJd2dnRWVNQTRHQTFVZER3RUIvd1FFQXdJSApnREFNQmdOVkhSTUJB
      ZjhFQWpBQU1CMEdBMVVkRGdRV0JCUjAzd1p5anBoZHFaeDJLYWg3aXJqMUROblVYakFmCkJnTlZI
      U01FR0RBV2dCUnEyOEE5aXpKN1pwc3d5dlF2N2F0QTlJN0VQREFrQmdOVkhSRUVIVEFiZ2hsallT
      MTAKYjI5c2N5MDFOVGswTnpkbU5qWmtMV3MyYmpabk1JR1hCZ2dxQXdRRkJnY0lBUVNCaW5zaVlY
      UjBjbk1pT25zaQpZV0poWXk1cGJtbDBJam9pZEhKMVpTSXNJbUZrYldsdUlqb2lkSEoxWlNJc0lt
      aG1Ma0ZtWm1sc2FXRjBhVzl1Cklqb2liV0Z1ZFdaaFkzUjFjbVZ5SWl3aWFHWXVSVzV5YjJ4c2JX
      VnVkRWxFSWpvaVFXUnRhVzVBYldGdWRXWmgKWTNSMWNtVnlMVzVsZENJc0ltaG1MbFI1Y0dVaU9p
      SmhaRzFwYmlKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRQpBaUFxbm01TmM4cnNrTldTSmJ1SHFT
      YzNhZzlxQXJ6dTFQelo2TXZjRVZ2Mnd3SWdNVVRaS05TUlpiZ0dTL0UzCndkazdmYjVYMzdmVmRY
      ZTI1MTFPOU5SU0FDYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2
      SoEGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNDekNDQWJLZ0F3SUJBZ0lVQ092Z3Nw
      N3ptbHpiSGw2TVBsdHd0NDFjR2U0d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1Ew
      Z3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZR
      UUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNp
      MXVaWFF3SGhjTk1qTXdNVEExTURVME16VXpXaGNOTWpVeE1ESTFNRFUwTXpVeldqQmtNUXN3Q1FZ
      RFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJn
      eEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFda
      aFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSHkxSHRI
      OGRkVHlhVVAwdUkzL3VTTHBjazRLSlBYY3B3d2EKUU5VTW93NE1Fb3hUUVJtc0U0NHVINmM2ZzRt
      YS9VYWdESTJ5SWhQcjhMeWFISnlEQjdtalFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZ
      RFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlJxMjhBOWl6SjdacHN3Cnl2UXY3YXRBOUk3
      RVBEQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQmRDU3BYM0ZFcmtGMTJ3eFl6YkU4cmxwaUYKRXdQ
      MnRPTzlONGZOVlczT0VnSWdiMEd3SlRvcnM4R1Q0WFppREZWdGVjVUZPT2VIWld0ZlFBclFrVjFy
      Z3dVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjgKB1dyaXRlcnMSLRIjCAES
      HxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVyZXJNU1AaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAES
      IRIIEgYIARICCAAaFRITCg9tYW51ZmFjdHVyZXJNU1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50
      Ei0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZhY3R1cmVyTVNQGgZBZG1pbnMiOAoHUmVhZGVy
      cxItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJlck1TUBoGQWRtaW5zKgZBZG1pbnMa
      QAoVQ2hhbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJl
      ci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoX
      L0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKEEhhc2hp
      bmdBbGdvcml0aG0SEhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0
      dXJlEhASBgj/////DxoGQWRtaW5zGk4KEE9yZGVyZXJBZGRyZXNzZXMSOhIfCh1vcmRlcmVyMS5z
      dXBwbHljaGFpbi1uZXQ6NzA1MBoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoMQ2FwYWJpbGl0
      aWVzEhYSDAoKCgZWMV80XzMSABoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoG
      QWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1JlYWRlcnMSFxIN
      CAMSCQoHUmVhZGVycxoGQWRtaW5zKgZBZG1pbnMaCgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
